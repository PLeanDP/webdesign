<?php
class Webdesign_model extends CI_Model {

	public function __construct()
		{
		parent::__construct();
		$this->load->database();
		}

	
	public function chosen_designer__sub()
		{
		$valid = $this->webdesign_model->chosen_designer__validate();

		if ($valid == 1)
			{
			$this->webdesign_model->chosen_designer__to_db();
			return 1;
			}
		else
			{
			return $valid;
			}
		}


	public function chosen_designer__to_db()
		{
		
		$data = array(
			'name' => $this->input->post('cl_name'),
			'location' => $this->input->post('cl_loc'),
			'contact_no' => $this->input->post('cl_num'),
			'email_add' => $this->input->post('cl_email'),
			'designer_id' => $this->input->post('des')
			);

		return $this->db->insert('request', $data);
		}


	public function	chosen_designer__validate()
		{
		$this->load->helper('form');
		$this->load->library('form_validation');

		$this->form_validation->set_rules('cl_name', 'Name', 'required');
		$this->form_validation->set_rules('cl_loc', 'City/Location', 'required');
		$this->form_validation->set_rules('cl_num', 'Contact number', 'required');
		$this->form_validation->set_rules('cl_email', 'Email address', 'required|valid_email');
		$this->form_validation->set_rules('des', 'Designers', 'required');
	
		if( $this->form_validation->run() == 1 )
			{
			return 1;
			} 
		else
			{
			$validation_errors = "";
			
			if (form_error('cl_name') !== "")
				{
				$validation_errors .=  "-" . form_error('cl_name') . "0";
				}
			if (form_error('cl_loc') !== "")
				{
				$validation_errors .=  "-" . form_error('cl_loc') . "0";
				}
			if (form_error('cl_num') !== "")
				{
				$validation_errors .=  "-" . form_error('cl_num') . "0";
				}
			if (form_error('cl_email') !== "")
				{
				$validation_errors .=  "-" . form_error('cl_email') . "0";
				}
			if (form_error('des') !== "")
				{
				$validation_errors .=  "-" . form_error('des') . "0";
				}
 
		
			$validation_errors = $this->webdesign_model->form_validation__string_convert("in",$validation_errors);

			return $validation_errors;

			}

		}



	public function	form_validation__string_convert($convert_to, $validation_string)
		{
		switch($convert_to)
			{
			case 'in':
				// converts <p> to NULL
				$validation_string = explode("<p>",$validation_string);
				$validation_string = implode("",$validation_string);
				// converts </p> to NULL
				$validation_string = explode("</p>",$validation_string);
				$validation_string = implode("",$validation_string);
				// converts / 
				$validation_string = explode("/",$validation_string);
				$validation_string = implode(" or ",$validation_string);	
				// converts spaces to _ 
				$validation_string = explode(" ",$validation_string);
				$validation_string = implode("_",$validation_string);	
				// converts %2 to _ 
				$validation_string = explode("%20",$validation_string);
				$validation_string = implode("_",$validation_string);	
				
				return $validation_string;
				break;
			case 'out':
				// converts - to <li>
				$validation_string = explode("-",$validation_string);
				$validation_string = implode("<li>",$validation_string);
				// converts 0 to </li>
				$validation_string = explode("0",$validation_string);
				$validation_string = implode("</li>",$validation_string);
				// converts _ to space
				$validation_string = explode("_",$validation_string);
				$validation_string = implode(" ",$validation_string);
				// converts %2 to space
				$validation_string = explode("%20",$validation_string);
				$validation_string = implode(" ",$validation_string);
				// converts %2 to space
				$validation_string = explode("%2",$validation_string);
				$validation_string = implode(" ",$validation_string);	
				return $validation_string;
				break;
			}
		}








	public function	new_designer__sub()
		{
		$valid = $this->webdesign_model->new_designer__validate();

		if ($valid == 1)
			{
			$id = $this->webdesign_model->new_designer__to_db__p1();
			$this->webdesign_model->new_designer__to_db__p2($id);
			$this->webdesign_model->new_designer__to_db__p3($id);
			return 1;
			}
		else
			{
			return $valid;
			}
		}




	public function new_designer__validate()
		{
		$fname = $this->input->post('nd_fname');
		$mname = $this->input->post('nd_mname');
		$lname = $this->input->post('nd_lname');	
		$username = $this->input->post('nd_username');

		$def_string = "";		

		$valid_name = $this->webdesign_model->new_designer__validate__name();
		$valid_username = $this->webdesign_model->new_designer__validate__username();
		$valid_post = $this->webdesign_model->new_designer__validate__post();
		
		if ($valid_post == 1)
			{
			if ($valid_name == 0)
				{
				$def_string .= "-Name " . $fname ." ". $mname ." ". $lname . " already in use0";	
				}
			if ($valid_name == 0)
				{
				$def_string .= "-Username ". $username ." already in use0";	
				}

			if ( ($valid_name == 1) AND ($valid_username == 1) )
				{
				return 1;
				}
			else
				{
				return $def_string;
				}
			}
		else
			{
			$validation_errors = $this->webdesign_model->form_validation__string_convert("in",$def_string);
			return $valid_post;
			}

		


		/*
			views

				webdesigner's page
				webdesigner's login
					change personal details
					change password
					edit sites
						site name
						site details
						site image				
				admin log-in
					view webdesigner's details
					approve/disapprove designers
				


		*/
		}



	public function new_designer__validate__post()
		{
		$this->load->helper('form');
		$this->load->library('form_validation');

		$this->form_validation->set_rules('nd_fname', 'First name', 'required');
		$this->form_validation->set_rules('nd_mname', 'Middle name', 'required');
		$this->form_validation->set_rules('nd_lname', 'last name', 'required');

		$this->form_validation->set_rules('nd_loc', 'City/Location', 'required');
		$this->form_validation->set_rules('nd_num', 'Contact number', 'required');
		$this->form_validation->set_rules('nd_email', 'Email address', 'required|valid_email');
		
		$this->form_validation->set_rules('nd_username', 'Username', 'required');
		$this->form_validation->set_rules('nd_password', 'Password', 'required');

		//$this->form_validation->set_rules('nd_site_shot_1', 'site preview', 'required');

		if( $this->form_validation->run() == 1 )
			{
			return 1;
			} 
		else
			{
			$validation_errors = "";

			if (form_error('nd_fname') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_fname') . "0";
				}
			if (form_error('nd_mname') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_mname') . "0";
				}
			if (form_error('nd_lname') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_lname') . "0";
				}
			if (form_error('nd_loc') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_loc') . "0";
				}
			if (form_error('nd_num') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_num') . "0";
				}
			if (form_error('nd_email') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_email') . "0";
				}
			if (form_error('nd_username') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_username') . "0";
				}
			if (form_error('nd_password') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_password') . "0";
				}
 			/*if (form_error('nd_site_shot_1') !== "")
				{
				$validation_errors .=  "-" . form_error('nd_site_shot_1') . "0";
				}*/

			$validation_errors = $this->webdesign_model->form_validation__string_convert("in",$validation_errors);

			return $validation_errors;
			}
		}

	public function new_designer__validate__name()
		{
		$fname = $this->input->post('nd_fname');
		$mname = $this->input->post('nd_mname');
		$lname = $this->input->post('nd_lname');		

		$this -> db -> select('id');
		$this -> db -> from('designer');
		$this -> db -> where('fname', $fname);
		$this -> db -> where('lname', $mname);
		$this -> db -> where('lname', $lname);
		$this -> db -> limit(1);

		$query = $this -> db -> get();

		if($query -> num_rows() >= 1)
			{
			return 0;
			}
		else
			{
			return 1;
			}
		}
	public function new_designer__validate__username()
		{
		$username = $this->input->post('nd_username');	

		$this -> db -> select('id');
		$this -> db -> from('designer_account');
		$this -> db -> where('username', $username);
		$this -> db -> limit(1);

		$query = $this -> db -> get();

		if($query -> num_rows() >= 1)
			{
			return 0;
			}
		else
			{
			return 1;
			}
		}













	public function new_designer__to_db__p1()
		{
		$data = array(
			'fname' => $this->input->post('nd_fname'),
			'mname' => $this->input->post('nd_mname'),
			'lname' => $this->input->post('nd_lname'),
			'contact_num' => $this->input->post('nd_num'),
			'e_add' => $this->input->post('nd_email'),
			'location' => $this->input->post('nd_loc'),
			'status' => $this->input->post('0')
			);

		$this->db->insert('designer', $data);

		return $this->webdesign_model->new_designer__get_id();
		}

	public function	new_designer__get_id()
		{
		$fname = $this->input->post('nd_fname');
		$mname = $this->input->post('nd_mname');
		$lname = $this->input->post('nd_lname');		
		$contact_num = $this->input->post('nd_num');
		$e_add = $this->input->post('nd_email');
		$location = $this->input->post('nd_loc');

		$this -> db -> select('id');
		$this -> db -> from('designer');
		$this -> db -> where('fname', $fname);
		$this -> db -> where('lname', $mname);
		$this -> db -> where('lname', $lname);
		$this -> db -> where('contact_num', $contact_num);
		$this -> db -> where('e_add', $e_add);
		$this -> db -> where('location', $location);
		$this -> db -> limit(1);	

		$query = $this -> db -> get();
		
		$res = $query->result_array();

			foreach ($res as $res):
				$id  = $res['id'];
			endforeach;

		return $id;
		}

	public function new_designer__to_db__p2($id)
		{
		$data = array(
			'username' => $this->input->post('nd_username'),
			'password' => $this->input->post('nd_password'),
			'id' => $id
			);

		return $this->db->insert('designer_account', $data);
		}


	public function new_designer__to_db__p3($id)
		{
		$user_name = $this->input->post('nd_username');
		$site_count = $this->input->post('nd_site_count');
			$site_count = $site_count * 1;			

		for($count = 1; $count <= $site_count; $count++)
			{			
			$site_shot = "nd_site_shot_" . $count;
				$new_site_shot = $this->webdesign_model->new_designer__to_db__p3__move_img($site_shot,$user_name);


			$site_name = "nd_site_name_" . $count;
				$site_name = $this->input->post($site_name);

			$site_desc = "nd_site_desc_" . $count;
				$site_desc = $this->input->post($site_desc);
			
			$data = array(
				'file_name' => $new_site_shot,
				'site_name' => $site_name,
				'site_desc' => $site_desc,
				'designer_id' => $id
				);

			$this->db->insert('designer_sites', $data);
			
			}
		}
	

	public function new_designer__to_db__p3__move_img($file_post,$alias)
		{
		$this->load->helper(array('form', 'url'));

		$config['upload_path'] = './designers_sites/';
		$config['allowed_types'] = 'gif|jpg|png';
		$config['remove_spaces'] = 'true';
		$config['file_name']  = $alias;
		$this->load->library('upload', $config);
	
		$this->upload->do_upload($file_post);

		$img_data = array('upload_data' => $this->upload->data());

			foreach ($img_data as $img_data):
				$name =  $img_data['raw_name'];
				$ext =  $img_data['file_ext'];
			endforeach;
		
		$new_file = $name . $ext;

		return $new_file;
		}
	




	public function get_designers_for_main_listing()
		{
		$query = $this->db->query("select id as the_id,location,(select username from designer_account where id = the_id limit 1) as alias, (select file_name from designer_sites where designer_id = the_id limit 1) as thumbnail from designer WHERE status = 0 order by alias");
		return $query->result_array();
			// produces the_id, alias, thumbnail, location	
		}






	



	function  set_fancybox_for_designers($designer_id)
		{
		//input: id of specific name
		
		echo "<script>";			
		echo "$(document).ready(function() {";
		echo "$('.fancy_$designer_id').click(function() {";
		echo " $.fancybox.open([";

		$image = $this->webdesign_model->get_designer_sites_images($designer_id);

		foreach ($image as $image)
			{
			echo "{";			
			echo "href : '" . base_url() . "designers_sites/"  . $image['file_name'] .  "',"; 
			echo "title : '" .	$image['site_name'] . "'";
			echo 	"},";		  
			}

		echo "], {";
		echo " padding : 5";
		echo " });";
		echo "return false;";
		echo "});";
		echo "});";
		echo "</script>	";		
	
		}

	public function get_designer_sites_images($designer_id)
		{
		$this -> db -> select('file_name,site_name,site_desc');
		$this -> db -> from('designer_sites');
		$this -> db -> where('designer_id', $designer_id);

		$query = $this -> db -> get();
		
		return $query->result_array();
		}

}
